<!DOCTYPE html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>ASPENSE</title>
  <!-- base:css -->
  <link rel="stylesheet" href="vendors/mdi/css/materialdesignicons.min.css">
  <link rel="stylesheet" href="vendors/feather/feather.css">
  <link rel="stylesheet" href="vendors/base/vendor.bundle.base.css">
  <!-- endinject -->
  <!-- inject:css -->
  <link rel="stylesheet" href="css/style.css">
  <!-- endinject -->
  <link rel="shortcut icon" href="images/logogo-removebg-preview.png" />
  
  <!-- Cropper.js CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/alertify.js/0.3.11/alertify.min.css" />

<!-- Include alertify.js library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/alertify.js/0.3.11/alertify.min.js"></script>


<!-- jQuery (required by Cropper.js) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Cropper.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


<style>
  .preview-container {
    display: grid; /* Use CSS Grid */
    grid-gap: 10px; /* Set the gap between grid items */
    padding-top: 20px;
    padding-left: 10px;
  }

  @media screen and (min-width: 576px) {
    /* For screens larger than or equal to 576px (e.g., tablets and desktops) */
    .preview-container {
      grid-template-columns: repeat(2, 1fr); /* Create 2 columns of equal width */
    }
  }

  @media screen and (min-width: 768px) {
    /* For screens larger than or equal to 768px (e.g., small desktops and tablets) */
    .preview-container {
      grid-template-columns: repeat(3, 1fr); /* Create 3 columns of equal width */
    }
  }

  @media screen and (min-width: 992px) {
    /* For screens larger than or equal to 992px (e.g., desktops) */
    .preview-container {
      grid-template-columns: repeat(4, 1fr); /* Create 4 columns of equal width */
    }
  }

.preview-image {
  width: 100%; /* Make the image take the full width of its grid cell */
  height: 200px; /* Adjust as needed */
  object-fit: cover;
  background-size: cover;
  background-position: center;
  position: relative; /* Set position relative for positioning the remove button */
}

.remove-button {
  position: absolute; /* Position the remove button */
  top: 5px; /* Adjust top position */
  right: 5px; /* Adjust right position */
  background: rgba(255, 255, 255, 0.7); /* Semi-transparent background */
  border: none;
  border-radius: 50%; /* Circular button */
  cursor: pointer;
  padding: 5px;
}
</style>
</head>

<body>
  <div class="container-scroller">
    <!-- partial:partials/_navbar.html -->
    <nav class="navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row">
      <div class="text-center navbar-brand-wrapper d-flex align-items-center justify-content-center">
        <a class="navbar-brand brand-logo" href="index.html"><img src="images/logo.png" alt="logo" style="height: 30px;"  /></a>
        <a class="navbar-brand brand-logo-mini" href="index.html"><img src="images/logogo-removebg-preview.png" alt="logo"/></a>
      </div>
      <div class="navbar-menu-wrapper d-flex align-items-center justify-content-end">
        <button class="navbar-toggler navbar-toggler align-self-center" type="button" data-toggle="minimize">
          <span class="icon-menu"></span>
        </button>
        <ul class="navbar-nav mr-lg-2">
          <li class="nav-item nav-search d-none d-lg-block">
            <div class="input-group">
              <div class="input-group-prepend">
                <span class="input-group-text" id="search">
                  <i class="icon-search"></i>
                </span>
              </div>
              <input type="text" class="form-control" placeholder="Search Projects.." aria-label="search" aria-describedby="search">
            </div>
          </li>
        </ul>
        <ul class="navbar-nav navbar-nav-right">
            <li class="nav-item dropdown d-lg-flex d-none">
                <button type="button" class="btn btn-info font-weight-bold">+ Create New</button>
            </li>
          <li class="nav-item dropdown d-flex">
            <a class="nav-link count-indicator dropdown-toggle d-flex justify-content-center align-items-center" id="messageDropdown" href="#" data-toggle="dropdown">
              <i class="icon-air-play mx-0"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list" aria-labelledby="messageDropdown">
              <p class="mb-0 font-weight-normal float-left dropdown-header">Messages</p>
              <a class="dropdown-item preview-item">
                <div class="preview-thumbnail">
                    <img src="images/faces/face4.jpg" alt="image" class="profile-pic">
                </div>
                <div class="preview-item-content flex-grow">
                  <h6 class="preview-subject ellipsis font-weight-normal">shibili
                  </h6>
                  <p class="font-weight-light small-text text-muted mb-0">
                    The meeting is cancelled
                  </p>
                </div>
              </a>
              <a class="dropdown-item preview-item">
                <div class="preview-thumbnail">
                    <img src="images/faces/face2.jpg" alt="image" class="profile-pic">
                </div>
                <div class="preview-item-content flex-grow">
                  <h6 class="preview-subject ellipsis font-weight-normal">Tim Cook
                  </h6>
                  <p class="font-weight-light small-text text-muted mb-0">
                    New product launch
                  </p>
                </div>
              </a>
              <a class="dropdown-item preview-item">
                <div class="preview-thumbnail">
                    <img src="images/faces/face3.jpg" alt="image" class="profile-pic">
                </div>
                <div class="preview-item-content flex-grow">
                  <h6 class="preview-subject ellipsis font-weight-normal"> Johnson
                  </h6>
                  <p class="font-weight-light small-text text-muted mb-0">
                    Upcoming board meeting
                  </p>
                </div>
              </a>
            </div>
          </li>
          <li class="nav-item dropdown d-flex mr-4 ">
            <a class="nav-link count-indicator dropdown-toggle d-flex align-items-center justify-content-center" id="notificationDropdown" href="#" data-toggle="dropdown">
              <i class="icon-cog"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list" aria-labelledby="notificationDropdown">
              <p class="mb-0 font-weight-normal float-left dropdown-header">Settings</p>
              <a class="dropdown-item preview-item">               
                  <i class="icon-head"></i> Profile
              </a>
              <a class="dropdown-item preview-item">
                  <i class="icon-inbox"></i> Logout
              </a>
            </div>
          </li>
          <li class="nav-item dropdown mr-4 d-lg-flex d-none">
            <a class="nav-link count-indicatord-flex align-item s-center justify-content-center" href="#">
              <i class="icon-grid"></i>
            </a>
          </li>
        </ul>
        <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center" type="button" data-toggle="offcanvas">
          <span class="icon-menu"></span>
        </button>
      </div>
    </nav>
    <!-- partial -->

<%- include("../layouts/admin/sidebar.ejs")
%>
 
    <!-- partial -->
    <div class="main-panel">
      <div class="content-wrapper">

        <div class="col-12 grid-margin">
          <div class="card">
            <div class="card-body">
              <form id="add-product" enctype="multipart/form-data">

              <div class="row">
                <div class="col-md-12">
                  <div class="form-group">
                    <label for="exampleInputName1">Product Name</label>
                    <input type="text" class="form-control" id="product-name" name="name" placeholder="product name">
                  </div>

                </div>

              </div>
              <div class="row">
                <div class="col-md-4">
                  <div class="form-group row">
                    <label for="product-category" class="col-sm-3 col-form-label">Category</label>
                    <div class="col-sm-9">
                      <select class="form-control" name="category" id="product-category">
                        <% categoryData.forEach( category =>{ %>
                        <option value="<%= category._id %>" ><%= category.name %></option>
                        <% }) %>
                      </select>
                    </div>
                  </div>
                </div>
                
             

              <input type="hidden" id="selected-category" name="category">

            
                <div class="col-md-4">
                  <div class="form-group row">
                    <label class="col-sm-3  col-form-label">Price</label>
                    <div class="col-sm-4  col-lg-4">
                      <input type="text" name="price" class="form-control" id="product-price"/>
                    </div>
                  </div>
                </div>
                <div class="col-md-4">
                  <div class="form-group row">
                    <label class="col-sm-3 col-form-label">Quantity</label>
                    <div class="col-sm-4  col-lg-4">
                      <input type="text" name="quantity" class="form-control" id="product-quantity" />
                    </div>
                  </div>
                </div>
              </div>
                <div class="row">
                  <div class="col-md-12">
                    <div class="form-group">
                      <label for="exampleTextarea1">Description</label>
                      <textarea class="form-control" id="product-description" name="description" rows="4"  ></textarea>
                    </div>
                  </div>

                  <div class="container">
                    <div class="row">
                        <div class="col-lg-3 col-md-6">
                            <div class="form-group">
                                <label>Image Upload</label>
                                <div class="input-group">
                                    <input type="file" id="imageFiles" name="images" class="file-upload-default" multiple>
                                    <span class="input-group-append">
                                        <button class="file-upload-browse btn btn-primary" type="button">Upload</button>
                                    </span>
                                </div>
                                <div id="previewContainer" class="preview-container" >
                                    
                                </div>
                            </div>
                        </div>
                    </div>
                </div>  
                    <div class="row col-12">
                    <button type="submit" class="btn btn-primary mr-2" id="add-product-btn">Save</button>
                    <a href="/admin/product" class="btn btn-primary  ">Back</a>
                  </div>
                </div>
            </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
 
          <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
          <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
          <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
          <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.min.js"></script>




          
          <script>
            document.addEventListener('DOMContentLoaded', function() {

              let croppers = [];
              let imageNumber = 0;
              let croppedFiles = []; 
              let originalFileName
          
              document.getElementById('imageFiles').addEventListener('change', function (event) {
                  const files = event.target.files;
                  if (files && files.length > 0) {
                      for (let i = 0; i < files.length; i++) {
                          handleImageCrop(files[i]);
                      }
                  }
              });
          
              function handleImageCrop(imageFile) {
                  const reader = new FileReader();
                  reader.onload = function (e) {
                      const previewContainer = document.getElementById('previewContainer');
                      const previewImage = document.createElement('div');
                      imageNumber++;
                      previewImage.className = `preview-image`;
                      previewImage.id = `cropperImage${imageNumber}`; 
                      previewImage.style.width = '200px';
                      previewImage.style.height = '250px';
                      previewImage.style.backgroundImage = 'url(' + e.target.result + ')';
                      previewImage.style.backgroundSize = 'cover';
                      previewImage.style.backgroundPosition = 'center';
                      previewImage.style.marginRight = '10px';
                      previewImage.style.marginBottom = '10px';
                      previewImage.style.position = 'relative';
          
                      const removeButton = document.createElement('button');
                      removeButton.className = 'remove-button';
                      removeButton.textContent = 'X';
                      removeButton.addEventListener('click', function () {
                          previewContainer.removeChild(previewImage);
                          croppers.splice(imageNumber - 1, 1);
                          croppedFiles.splice(imageNumber-1,1)
                       
                      });
                      previewImage.appendChild(removeButton);
                      previewContainer.appendChild(previewImage);
          
                      const cropperImage = document.createElement('img');
                      cropperImage.src = e.target.result;
                      cropperImage.style.maxWidth = '300px';
                      cropperImage.style.maxHeight = '400px';
          
                      const cropModal = document.createElement('div');
                      cropModal.className = 'modal fade';
                      cropModal.id = `cropModal${imageNumber}`;
                      cropModal.tabIndex = '-1';
                      cropModal.role = 'dialog';
                      cropModal.setAttribute('aria-labelledby', `cropModalLabel${imageNumber}`);
                      cropModal.setAttribute('aria-hidden', 'true');
          
                      const modalDialog = document.createElement('div');
                      modalDialog.className = 'modal-dialog';
                      modalDialog.role = 'document';
                      cropModal.appendChild(modalDialog);
          
                      const modalContent = document.createElement('div');
                      modalContent.className = 'modal-content';
                      modalDialog.appendChild(modalContent);
          
                      const modalHeader = document.createElement('div');
                      modalHeader.className = 'modal-header';
                      modalContent.appendChild(modalHeader);
          
                      const modalTitle = document.createElement('h5');
                      modalTitle.className = 'modal-title';
                      modalTitle.id = `cropModalLabel${imageNumber}`;
                      modalTitle.textContent = `Crop Image ${imageNumber}`;
                      modalHeader.appendChild(modalTitle);
          
                      const modalBody = document.createElement('div');
                      modalBody.className = 'modal-body';
                      modalContent.appendChild(modalBody);
          
                      modalBody.appendChild(cropperImage);
          
                      const modalFooter = document.createElement('div');
                      modalFooter.className = 'modal-footer';
                      modalContent.appendChild(modalFooter);
          
                      const cancelButton = document.createElement('button');
                      cancelButton.className = 'btn btn-secondary';
                      cancelButton.type = 'button';
                      cancelButton.textContent = 'Cancel';
                      cancelButton.setAttribute('data-dismiss', 'modal');
                      modalFooter.appendChild(cancelButton);
          
                      const applyCropButton = document.createElement('button');
                      applyCropButton.className = 'btn btn-primary applyCropBtn';
                      applyCropButton.type = 'button';
                      applyCropButton.textContent = 'Apply Crop';
                      applyCropButton.setAttribute('data-dismiss', 'modal');
                      applyCropButton.setAttribute('data-image-number', imageNumber);
                      modalFooter.appendChild(applyCropButton);
          
                      document.body.appendChild(cropModal);
          
                      croppers[imageNumber - 1] = new Cropper(cropperImage, {
                          aspectRatio: -1,
                          viewMode: -1,
                          cropBoxResizable: true,
                          cropBoxWidth: 200,
                          cropBoxHeight: 400,
                      });
          
                      $('#cropModal' + imageNumber).modal('show');
                  };
                  reader.readAsDataURL(imageFile);
              }
          
              document.body.addEventListener('click', function (event) {
                let count=0
    if (event.target.matches('.applyCropBtn')) {
        const imageNumber = parseInt(event.target.dataset.imageNumber);
        const croppedCanvas = croppers[imageNumber - 1].getCroppedCanvas();
        const previewImage = document.getElementById(`cropperImage${imageNumber}`); 
        previewImage.style.backgroundImage = 'url(' + croppedCanvas.toDataURL('image/jpeg') + ')';
        $('#cropModal' + imageNumber).modal('hide');
        count++

        const file = document.getElementById('imageFiles').files[count - 1];
if (file) {
     originalFileName = file.name;

} else {
    console.error('File not found for image number:', count);
}

        croppedCanvas.toBlob(function(blob) {
    
            const file = new File([blob], originalFileName, {type: "image/jpeg"});
   
            croppedFiles.push(file);
        });
    }
   
});



    
       

            document.getElementById("add-product").addEventListener('submit', async (e) => {
              e.preventDefault();
              const name = document.getElementById("product-name").value;
              const category = document.getElementById("product-category").value;
              const price = document.getElementById('product-price').value;
              const quantity = document.getElementById('product-quantity').value;
              const description = document.getElementById('product-description').value;
              
            
          
          
              if (!name.trim()) {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Please enter a product name.'
                });
                return;
              }
              if (!price.trim() || isNaN(price) || parseFloat(price) <= 0) {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Please enter a valid price.'
                });
                return;
              }
             
              if (!quantity.trim() || isNaN(quantity) || parseInt(quantity) <= 0) {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Please enter a valid quantity.'
                });
                return;
              }
              if (!description.trim()) {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Please enter a product description.'
                });
                return;
              }
          
              const formData = new FormData();
              formData.append('name', name);
              formData.append('price', price);
              formData.append('quantity', quantity);
              formData.append('category', category);
              formData.append('description', description);
              
          
              for (let i = 0; i < croppedFiles.length; i++) {
        formData.append('images[]', croppedFiles[i]);
    }
          
              $.ajax({
                type: 'post',
                url: '/admin/add-product',
                data: formData,
                contentType: false,
                processData: false,
                success: (response) => {
                  if (response.success) {
                    Swal.fire({
                      icon: 'success',
                      title: 'Product added successfully',
                      showConfirmButton: false,
                      timer: 2000
                    }).then(()=> {
                      window.location.href='/admin/product'
                    })
                   
                  } else {
                    Swal.fire({
                      icon: 'error',
                      title: 'Error',
                      text: 'Failed to add product. Please try again later.'
                    });
                  }
                },
                error: (xhr, status, error) => {
                  console.error(xhr.responseText);
                  Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while adding the product. Please try again later.'
                  });
                }
              });
            });
         
});
          </script>
          


<script>
  const categorySelect = document.getElementById('product-category')
  const selectedCategoryInput = document.getElementById('selected-category')
  categorySelect.addEventListener('change',function(){
    const selectedCategory=categorySelect.value
    selectedCategoryInput.value=selectedCategory
  })
</script>

<script src="vendors/base/vendor.bundle.base.js"></script>
<script src="js/off-canvas.js"></script>
<script src="js/hoverable-collapse.js"></script>
<script src="js/template.js"></script>





  <%- include('../layouts/admin/footer.ejs') %>